{"version":3,"file":"static/js/107.545d5629.chunk.js","mappings":"sLAEaA,E,QAASC,GAAAA,OAAH,6dAEV,qBAAGC,MAAkBC,OAAOC,KAA5B,IACY,qBAAGF,MAAkBC,OAAOE,OAA5B,IAEH,qBAAGH,MAAkBI,QAAQ,EAA7B,IAOS,qBAAGJ,MAAkBK,UAAUC,WAA/B,IAKT,qBAAGN,MAAkBO,QAAQC,OAA7B,G,oLCjBLC,EAAOV,EAAAA,GAAAA,IAAH,0DAKJW,EAAMX,EAAAA,GAAAA,IAAH,6EAKHY,EAAOZ,EAAAA,GAAAA,IAAH,sFAIR,qBAAGC,MAAkBC,OAAOW,IAA5B,I,mBCsCT,EAjD0B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzBC,EAMED,EANFC,MACAC,EAKEF,EALFE,aACAC,EAIEH,EAJFG,OACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,YAGIC,EAA2B,GAD7BN,EADFO,aAGIC,EAAON,EAAaO,MAAM,EAAG,GACnC,OACE,UAACb,EAAD,YACE,SAACC,EAAD,CACEa,IAAKL,EAAW,UAAMM,EAAAA,GAAN,YAAsBN,GAAgBO,EACtDC,IAAKZ,KAEP,UAACH,EAAD,YACE,0BACGG,EADH,KACYO,EADZ,QAGA,wCAAgBF,EAAhB,SACA,sCACA,uBAAIF,KACJ,mCACCD,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,4BAAgBA,EAAhB,MAAWD,EADD,SAMnB,E,uCChCYE,EAAgB/B,EAAAA,GAAAA,IAAH,oIAQbgC,GAAUhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAF,mYAEZ,qBAAGC,MAAkBC,OAAOC,KAA5B,IACY,qBAAGF,MAAkBC,OAAOE,OAA5B,IAIH,qBAAGH,MAAkBI,QAAQ,EAA7B,IAMS,qBAAGJ,MAAkBK,UAAUC,WAA/B,IAKT,qBAAGN,MAAkBO,QAAQC,OAA7B,ICiClB,EAnDqB,WAAO,IAAD,EAEnByB,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAC7BG,GAAWC,EAAAA,EAAAA,MAAXD,QACR,GAA2BE,EAAAA,EAAAA,UAAS,MAApC,eAAO3B,EAAP,KAAc4B,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEwBC,EAAAA,EAAAA,IAAgBR,GAFxC,OAEUzB,EAFV,OAGI4B,EAAS5B,GACT+B,EAAUF,EAAAA,EAAAA,UAJd,gDAOIK,QAAQC,IAAR,MACAJ,EAAUF,EAAAA,EAAAA,UARd,0DAFc,sBACdE,EAAUF,EAAAA,EAAAA,SADI,mCAadO,EACD,GAAC,CAACX,IAIH,OACI,gCACCK,IAAWD,EAAAA,EAAAA,UAAkB,SAACQ,EAAA,EAAD,IAC7BP,IAAWD,EAAAA,EAAAA,WAAmB,SAACS,EAAA,EAAD,IAC9BR,IAAWD,EAAAA,EAAAA,UAAmB7B,IAC7B,iCACA,SAAC,IAAD,CAAQuC,QAPC,kBAAMnB,EAASE,EAAf,EAOT,sBACA,SAAC,EAAD,CAAmBtB,MAAOA,KAC1B,UAACiB,EAAD,YACA,SAACC,EAAD,CAAUM,MAAO,CAACF,KAAAA,GAAOkB,GAAI,OAA7B,mBACA,SAACtB,EAAD,CAAUM,MAAO,CAACF,KAAAA,GAAOkB,GAAE,kBAAaf,EAAb,YAA3B,yBAGA,SAAC,KAAD,SASP,C","sources":["components/Button/Button.styled.jsx","components/MovieDetailsCards/MovieDetailscards.styled.jsx","components/MovieDetailsCards/MovieDetailsCards.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\ndisplay: inline-block;\ncolor: ${({ theme }) => theme.colors.white};\n background-color: ${({ theme }) => theme.colors.primary};\n\n border-radius: ${({ theme }) => theme.spacing(1)};\n font-family:'Roboto',-apple-system,BlinkMacSystemFont,'Segoe UI','Oxygen','Ubuntu', 'Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;\n font-size: 12px;\n  padding: 8px 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  cursor: pointer;\n  transition: box-shadow ${({ theme }) => theme.animation.cubicBezier};\n  border: none;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.regular};\n  }\n`;\n","import styled from 'styled-components'\n\nexport const Card = styled.div`\ndisplay: flex;\nmargin-top:30px;\n`;\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 300px;\nborder-radius: 5px;\n`;\nexport const Info = styled.div`\nflex: 1;\nmin-width: 200px;\nmargin-left: 20px;\ncolor: ${({ theme }) => theme.colors.text};\n`;","import PropTypes from \"prop-types\";\nimport { BASE_URL_IMG } from \"services/moviesApi\";\nimport { Card, Img, Info } from \"./MovieDetailscards.styled\";\nimport fallback from \"images/fallback.jpg\";\n\nconst MovieDetailsCards = ({ movie }) => {\n  const {\n    title,\n    release_date,\n    genres,\n    overview,\n    poster_path,\n    vote_average,\n  } = movie;\n  const userScore = vote_average * 10;\n  const year = release_date.slice(0, 4);\n  return (\n    <Card>\n      <Img\n        src={poster_path ? `${BASE_URL_IMG}/${poster_path}` : fallback}\n        alt={title}\n      />\n      <Info>\n        <h2>\n          {title} ({year})\n        </h2>\n        <p>User score: {userScore} %</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {genres.map(({ id, name }) => (\n          <span key={id}>{name} </span>\n        ))}\n      </Info>\n    </Card>\n  );\n};\n\nMovieDetailsCards.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetailsCards;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const AdditionalBox = styled.div`\n  margin-top: 20px;\n  margin-bottom: 30px;\n  & p {\n    margin-bottom: 10px;\n    font-weight: 500;\n  }\n`;\nexport const CastLink= styled(Link)`\ndisplay: inline-block;\ncolor: ${({ theme }) => theme.colors.white};\n background-color: ${({ theme }) => theme.colors.primary};\n min-width: 120px;\n margin-right: 60px;\n text-align: center;\n border-radius: ${({ theme }) => theme.spacing(1)};\n font-size: 12px;\n  padding: 8px 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  cursor: pointer;\n  transition: box-shadow ${({ theme }) => theme.animation.cubicBezier};\n  border: none;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.regular};\n  }\n`;","import React, {useState, useEffect} from \"react\";\nimport {Outlet, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from '../../services/moviesApi';\nimport Status from \"utils/StateMashin\";\nimport MovieDetailsCards from \"components/MovieDetailsCards/MovieDetailsCards\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Error } from \"components/Error/Error\";\nimport { Button } from \"components/Button/Button.styled\";\nimport { CastLink, AdditionalBox } from \"./MovieDetails.styled\";\n\n\n\nconst MovieDetails = () => {\n \n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || \"/\";\n  const { movieId} = useParams();\n  const [movie, setMovie] =  useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function fetchMovieDetails(){\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n        setStatus(Status.RESOLVED);\n      }\n      catch(error){\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    fetchMovieDetails();\n  },[movieId]);\n\n \n  const goBack = () => navigate(from);\n  return (\n      <>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Error />}\n      {status === Status.RESOLVED && movie && (\n        <>\n        <Button onClick={goBack}>Go Back</Button>\n        <MovieDetailsCards movie={movie}/>\n        <AdditionalBox>\n        <CastLink state={{from}} to={'cast'}>Cast</CastLink >\n        <CastLink state={{from}} to={`/movies/${movieId}/reviews`}>Reviews</CastLink>\n        </AdditionalBox>\n        \n        <Outlet/>\n      \n       \n        </>\n      )}\n        \n      </>\n  \n  );\n};\n\nexport default MovieDetails;"],"names":["Button","styled","theme","colors","white","primary","spacing","animation","cubicBezier","shadows","regular","Card","Img","Info","text","movie","title","release_date","genres","overview","poster_path","userScore","vote_average","year","slice","src","BASE_URL_IMG","fallback","alt","map","id","name","AdditionalBox","CastLink","Link","navigate","useNavigate","from","useLocation","state","movieId","useParams","useState","setMovie","Status","status","setStatus","useEffect","getMovieDetails","console","log","fetchMovieDetails","Loader","Error","onClick","to"],"sourceRoot":""}