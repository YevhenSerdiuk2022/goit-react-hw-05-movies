{"version":3,"file":"static/js/680.783e3a35.chunk.js","mappings":"sOAEaA,EAAOC,EAAAA,GAAAA,GAAH,wVAQK,qBAAGC,MAAkBC,OAAOC,OAA5B,IAEN,qBAAGF,MAAkBG,QAAQC,KAA7B,IASHC,EAAMN,EAAAA,GAAAA,IAAH,2LAUHO,EAAOP,EAAAA,GAAAA,IAAH,uGAIR,qBAAGC,MAAkBC,OAAOM,KAA5B,I,SC7BIC,EAAgB,SAAC,GAGvB,IAAD,IAFJC,MAASC,EAEL,EAFKA,GAAIC,EAET,EAFSA,MAAOC,EAEhB,EAFgBA,YACpBC,EACI,EADJA,cAEE,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAACC,KAAMH,GAAzC,UACE,UAACf,EAAD,YACE,SAACO,EAAD,CACAY,IAAKL,EAAW,UAAMM,EAAAA,GAAN,YAAsBN,GAAgBO,KACvD,SAACb,EAAD,UAAOK,QAKb,EClBUS,EAAQrB,EAAAA,GAAAA,GAAH,qQAOP,qBAAGC,MAASC,OAAsBM,KAAlC,IAEK,qBAAGP,MAASC,OAAsBC,OAAlC,IACW,qBAAGF,MAAkBqB,UAAUC,WAA/B,IACX,qBAAGtB,MAAkBG,QAAQoB,OAA7B,IAEHC,EAAKzB,EAAAA,GAAAA,GAAH,oMCYf,EAtBkB,SAAC,GAAoC,IAAnC0B,EAAkC,EAAlCA,OAAQd,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,cAC/B,OACI,iCACA,SAACO,EAAD,UAAQT,KACR,SAACa,EAAD,UACKC,EAAOC,KAAI,SAAAjB,GAAK,OACb,SAACD,EAAD,CACCC,MAAOA,EACPI,cAAeA,GAFIJ,EAAMC,GADb,QAU5B,C,sJC2BC,UAtCe,WACf,OAA4BiB,EAAAA,EAAAA,UAAS,MAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAoBf,OAjBJC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUV,EAFV,OAGIG,EAAUH,EAAOW,SACjBL,EAAUF,EAAAA,EAAAA,UAJd,gDAOIQ,QAAQC,IAAR,MACAP,EAAUF,EAAAA,EAAAA,UARd,0DAHc,sBACdE,EAAUF,EAAAA,EAAAA,SADI,mCAcdU,EACD,GAAE,KAGG,gCACCT,IAAYD,EAAAA,EAAAA,OAAe,wBAC3BC,IAAWD,EAAAA,EAAAA,UAAkB,SAAC,IAAD,IAC7BC,IAAWD,EAAAA,EAAAA,WAAmB,SAAC,IAAD,IAC9BC,IAAYD,EAAAA,EAAAA,UAAmBJ,IAC9B,SAAC,IAAD,CAAWA,OAAQA,EACnBZ,cAAemB,EACdrB,MAAO,qBAKb,C","sources":["components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/Movielist.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.li`\ndisplay: flex;\n  align-items: flex-end;\n  min-height: 300px;\n  border-radius: 10px;\n  padding: 15px;\n  background: white;\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.primary};\n  transition: 0.4s ease-out;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  &:hover {\n    transform: translateY(10px);\n    &:before {\n      opacity: 1;\n    }\n\n\n`;\nexport const Img = styled.img`\n  width: 80%;\n  height: 80%;\n  object-fit: fill;\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n`;\nexport const Info = styled.div`\ntext-transform: uppercase;\nfont-weight: bold;\nfont-size: 10px;\ncolor: ${({ theme }) => theme.colors.white};\n`;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL_IMG } from 'services/moviesApi';\nimport fallback from 'images/fallback.jpg';\nimport { Card, Img, Info } from './MovieListItem.styled';\n\nexport const MovieListItem = ({\n  movie: { id, title, poster_path },\n  locationState,\n}) => {\n    return (\n      <Link to={`/movies/${id}`} state={{from: locationState}}>\n        <Card>\n          <Img \n          src={poster_path ? `${BASE_URL_IMG}/${poster_path}` : fallback} />\n         <Info>{title}</Info> \n        \n        </Card>\n        </Link>\n    );\n  };\n\n  MovieListItem.propTypes = {\n    movie: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }),\n    locationState: PropTypes.object.isRequired,\n  };","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  display: block;\n  width: 100%;\n  margin: 30px auto;\n  padding: 20px;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme: { colors } }) => colors.white};\n  text-transform: uppercase;\n  background: ${({ theme: { colors } }) => colors.primary};\n  transition: box-shadow ${({ theme }) => theme.animation.cubicBezier};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n`;\nexport const Ul = styled.ul`\n  display: grid;\n  max-width: calc(100% - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n`;","import PropTypes from 'prop-types';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\nimport { Title, Ul } from './MovieList.styled';\n\n\nconst MovieList = ({movies, title, locationState}) => {\n    return (\n        <>\n        <Title>{title}</Title>\n        <Ul>\n            {movies.map(movie =>(\n                <MovieListItem key={movie.id}\n                 movie={movie}\n                 locationState={locationState} />\n                          \n            ))}\n       \n        </Ul>\n        </>\n    )\n};\n\nMovieList.propTypes ={\n    title: PropTypes.string,\n    movies:PropTypes.array,\n   \n};\nexport default MovieList;","import MovieList from '../../components/MovieList/Movielist';\nimport React, {useState, useEffect} from \"react\";\nimport {useLocation} from 'react-router-dom';\nimport { getTrending } from \"services/moviesApi\";\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\nimport Status from 'utils/StateMashin';\n\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const location = useLocation();\n\n  \nuseEffect(() => {\n  setStatus(Status.PENDING);\n \n  async function fetchTrending(){\n    try{\n      const movies = await getTrending();\n      setMovies(movies.results);\n      setStatus(Status.RESOLVED);\n    }\n    catch(error){\n      console.log(error);\n      setStatus(Status.REJECTED);\n    }\n  }\n  fetchTrending();\n}, []);\n\n    return (\n      <>\n      {status  === Status.IDLE && <></>}\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Error />}\n      {status  === Status.RESOLVED && movies &&(\n        <MovieList movies={movies}\n        locationState={location}\n         title={'Trending today'}  />\n      )}\n       \n      </>\n    );\n  };\n\n  export default HomePage;"],"names":["Card","styled","theme","colors","primary","shadows","small","Img","Info","white","MovieListItem","movie","id","title","poster_path","locationState","to","state","from","src","BASE_URL_IMG","fallback","Title","animation","cubicBezier","regular","Ul","movies","map","useState","setMovies","Status","status","setStatus","location","useLocation","useEffect","getTrending","results","console","log","fetchTrending"],"sourceRoot":""}